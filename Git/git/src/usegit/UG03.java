package usegit;

/**
 *
 *【Git分支】
 *  分支：在版本控制过程中，同时推进多个任务，为每个任务，我们就可以创建每个任务的单独分支。在初始化本地Git仓库的时候，
 *   Git默认创建了一个叫master的分支，称为主分支，用来记录整个项目已完成的功能代码（通常是让用户使用，不允许程序员操作）。
 *   功能分支是专门开发新功能的分支，当新功能开发且测试完毕后，需要合并到主分支上，并且在功能分支上进行的操作不会改变主分支（通常是让程序员开发）
 *  分支的好处：同时并行推进多个功能开发，提高开发效率。
 *              各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任何影响。失败的分支删除重新开始即可。
 *
 *【分支操作】
 *  git branch 分支名	               # 创建的新的分支，并将主分支master的内容复制了一份。
 *  git branch -v	                   # 查看分支
 *  git checkout 分支名	           # 切换分支
 *                                       切换分支命令同样会被git reflog监视，与版本穿梭不同的是，当切换分支时，暂存区的文件会仍然保留在暂存区，切换分支后仍能看到暂存区的文件
 *                                       但如果在分支中提交了文件，切换分支后就看不见提交后的文件拉~
 *  git merge 分支名	               # 把指定的分支合并到 当前分支 上
 *  git branch -d 分支名称            # 删除本地某分支（要删除改分支时不能正处于该分支）
 *
 *【合并冲突问题】
 *  正常合并：主分支的文件不修改。功能分支修改对应的文件，则合并不会冲突
 *  合并冲突：并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改。 Git 无法替我们决定使用哪一个，因此，必须人为决定新代码内容
 *                            ------------------合并冲突示例-----------------------
 *       修改主分支文件为：          修改功能分支文件为：            发生合并冲突，git不知道要保留主分支的修改还是功能分支的修改，此时查看文件，可以看到如下
 *       hello1                    hello1                         hello1
 *       hello2                    hello2                         hello2
 *       hello3                    hello3                         hello3
 *       hello4                    hello4                         hello4
 *       hello5                    hello5                         hello5
 *       hello6 ---                hello6 +++                     <<<<<<< HEAD                    # HEAD与等号之间是当前分支的修改
 *                                                                hello6 ---
 *                                                                =======
 *                                                                hello6 +++
 *                                                                >>>>>>> mergetest               # 等号与大于号之间是功能分支的修改
 *       修改后的主分支文件
 *       hello1
 *       hello2
 *       hello3
 *       hello4
 *       hello5
 *       hello6 ---
 *       hello6 +++
 *       hello7
 *  解决合并冲突，删除特殊符号，根据需要删除、保留、添加信息后， 需要重新添加该文件到暂存区✔并且commit该文件时不能带文件名，只能commit当前暂存区的所有文件✔
 *                            ------------------合并冲突示例-----------------------

 @author Alex
 @create 2023-01-23-21:11
 */
public class UG03 {

}
