package backups;

/**
 * 【数据库迁移】
 *  数据迁移（data migration）是指选择、准备、提取和转换数据，并将数据从一个计算机存储系统永久地传输到另一个计算机存储系统的过程。
 * 此外， 验证迁移数据的完整性 和 退役原来旧的数据存储 ，也被认为是整个数据迁移过程的一部分。
 * 总体来讲，MySQL 数据迁移方案大致可以分为 物理迁移 和 逻辑迁移 两类。通常以尽可能 自动化 的方式执行，从而将人力资源从繁琐的任务中解放出来。
 *     物理迁移
 *      物理迁移适用于大数据量下的整体迁移。使用物理迁移方案的优点是比较快速，但需要停机迁移并且要求 MySQL 版本及配置必须和原服务器相同，也可能引起未知问题。
 *      物理迁移包括拷贝数据文件和使用 XtraBackup 备份工具两种。
 *      不同服务器之间可以采用物理迁移，我们可以在新的服务器上安装好同版本的数据库软件，创建好相同目录，建议配置文件也要和原数据库相同，然后从原数据库方拷贝来数据文件及日志文件，配置好文件组权限，之后在新服务器这边使用 mysqld 命令启动数据库。
 *     逻辑迁移
 *      逻辑迁移适用范围更广并且兼容性高、灵活方便，无论是 部分迁移 还是 全量迁移 ，都可以使用逻辑迁移。逻辑迁移中使用最多的就是通过 mysqldump 等备份工具
 *      缺点是迁移时间长
 *
 * 【迁移注意点】
 * （1）相同版本的数据库之间迁移
 *     在主版本号相同的MySQL数据库之间进行数据库移动。
 *     方式1： 因为迁移前后MySQL数据库的 主版本号相同 ，所以可以通过复制数据库目录来实现数据库迁移，但是物理迁移方式只适用于MyISAM引擎的表。对于InnoDB表，不能用直接复制文件的方式备份数据库。
 *     方式2： 最常见和最安全的方式是使用 mysqldump命令 导出数据，然后在目标数据库服务器中使用MySQL命令导入。
 * （2）不同版本的数据库之间迁移注意点
 *      旧版本与新版本的MySQL可能使用不同的默认字符集，如果数据库中有中文数据，那么迁移过程中需要对 默认字符集进行修改，不然可能无法正常显示数据。
 *      高版本的MySQL数据库通常都会 兼容低版本 ，因此比较容易从低版本的MySQL数据库迁移到高版本的MySQL数据库。
 * （3）不同数据库之间迁移注意点
 *     这种迁移没有普适的解决方法。
 *     迁移之前，需要了解不同数据库的架构，比较它们之间的差异。不同数据库中定义相同类型的数据的 关键字可能会不同。例如，MySQL中日期字段分为DATE和TIME两种，而ORACLE日期字段只有DATE；SQL Server数据库中有ntext、Image等数据类型，MySQL数据库没有这些数据类型；MySQL支持的ENUM和SET类型，这些SQL Server数据库不支持。
 *     另外，数据库厂商并没有完全按照SQL标准来设计数据库系统，导致不同的数据库系统的 SQL语句 有差别。例如，微软的SQL Server软件使用的是T-SQL语句，T-SQL中包含了非标准的SQL语句，不能和MySQL的SQL语句兼容。
 *     不同类型数据库之间的差异造成了互相 迁移的困难 ，这些差异其实是商业公司故意造成的技术壁垒。但是不同类型的数据库之间的迁移并不是完全不可能 。例如，可以使用 MyODBC 实现MySQL和SQL Server之间的迁移。MySQL官方提供的工具 MySQL Migration Toolkit 也可以在不同数据之间进行数据迁移。MySQL迁移到Oracle时，需要使用mysqldump命令导出sql文件，然后，手动更改 sql文件中的CREATE语句。
 *
 * 【弥补错删数据】了解
 * （1）使用delete语句误删数据行;
 *     使用 Flashback工具恢复数据。
 *      原理：修改binlog 内容，拿回原库重放。如果误删数据涉及到了多个事务的话，需要将事务的顺序调过来再执行。
 *     预防：建议可以打开 安全模式，把 sql_safe_updates 参数设置为 on
 * （2）使用drop table或者truncate table语句误删数据表 或 使用drop database语句误删数据库
 *     使用delete命令删除的数据，你还可以用Flashback来恢复。而使用truncate /drop table和drop database命令删除的数据，就没办法通过Flashback来恢复了
 *       因为该命令记录的binlog还是statement格式。binlog里面就只有一个truncate/drop语句，这些信息是恢复不出数据的。
 *       这种情况下，要想恢复数据，就需要使用 全量备份 ，加 增量日志 的方式了。这个方案要求线上有定期的全量备份，并且实时备份binlog。
 *     预防：权限分离、制定操作规范、设置延迟复制备库
 * （3）使用rm命令误删整个MySQL实例。
 *     对于一个有高可用机制的MySQL集群来说，不用担心rm误删整个MySQL实例。因为只是删掉了其中某一个节点的数据的话，HA系统就会开始工作，选出一个新的主库，从而保证整个集群的正常工作。
 *       我们要做的就是在这个节点上把数据恢复回来，再接入整个集群。
 *     如果是恶意地把整个集群删除，那就需要考虑跨机房备份，跨城市备份。
 *
 @author Alex
 @create 2023-05-29-15:58
 */
public class UB06 {
}
