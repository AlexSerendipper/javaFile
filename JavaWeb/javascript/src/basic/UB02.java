package basic;

/**
 * 【变量与运算符】
 *
 * 【基本数据类型】包括string，number，boolean，undefined，null
 *  和java一样，基本数据类型在存储时变量中存储的是值本身，
 *  基本数据类型存放在 栈空间 中
 *  不同于java，JS的字符串具有不可变性，字符串的重新赋值，会开辟一个新的空间然后将指针指向它✔（而java如果使用字面量赋值，字符串将保存在常量池中）
 *    number，数字型，在数字前加0表示八进制，在数字前加0x表示16进制
 *    string，字符串型
 *    boolean，布尔型，true参与加减法时当作1来看，false参与加减法时当作0来看
 *    undefined，定义了变量但未赋值，参与加法运算时结果都为NaN
 *    null，空值，参与加法运算时当作0来看
       但是null的数据类型是对象，这其实是一个bug，如果某个对象没想好放什么就给个null值
 *    NaN, 非数字。非数值。
 *
 *
 * 【运算符与隐式转换】
 * （0）算数运算符
 *  %                     # 取余数
 *  ++var1                # 自增运算符（必须搭配变量使用）
 *  var1++                # 自增运算符
 *  += -= *= /=           # 快捷运算
 * （1）比较运算符
 *  ==                    # 等于是简单的做字面值的比较。==判断会默认转换为数值型进行比较，故18=='18'，true
 *  ===                   # 除了做字面值的比较之外，还会比较两个变量的数据类型
 * （2）逻辑操作符
 *  &&                    # 且运算
 *  ||                    # 或运算
 *  !                     # 取反运算
 *  ✔JavaScript 语言中，所有的变量，都可以做为一个 boolean 类型的变量去使用。0 、null、 undefined、""(空串) 都认为是 false；
 *（3）隐式转换
 *  num1 + ''             # ✔隐式转换(+)，字符串与任意类型数据拼接成一个新字符串非常常见！！
 *  str1 - 0              # ✔隐式转换(- * /)，利用该特性实现转换为数字型！ 非常常见！！
 *
 * 【变量】
 *  声明变量，即在在内存中申请一个空间用来存放数据，通过变量名来获取数据（不能以数字开头，不能是关键字）
 *  var 变量名；                               # 声明变量，不声明直接使用不会报错，但不提倡
 *  变量名=10;                                 # 变量赋值
 *  var 变量名1=10, 变量名2=20;                  # 声明并赋值（变量的初始化）
 *  var str1='我是"你爹"'                        # 若有字符串的嵌套关系，可以推荐使用外单内双
 *  var str2 = '12'+str1+'34'                    # 要在字符串中添加另一个字符串，使用'+str+'的格式✔✔✔✔✔
 *  var str2 = '12${str1}34'                     # 要在字符串中添加另一个字符串的最新语法 `${}` ✔✔✔✔✔
 *  var a=9, b=9, c=9                            # ✔ 集体声明，是用逗号隔开
 *  var a=b=c=1  相当于 var a=9 ;b=9; c=9        # ✔相当于b和c直接赋值，没有var声明，如在函数内部会当作全局变量
 *
 *
 @author Alex
 @create 2023-01-27-10:20
 */
public class UB02 {

}
