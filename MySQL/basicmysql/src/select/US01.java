package select;

/**
 * 【数据库概述】
 *  为什么使用数据库：能够实现数据的数据持久化存储
 *
 * 【数据库相关概念】DBS > DBMS > DB
 *  DB：数据库（Database）：即存储数据的“仓库”，其本质是一个文件系统。它保存了一系列有组织的数据。（✔泛指在硬盘上的数据库文件）
 *  DBMS：数据库管理系统（Database Management System）是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，
 *         对数据库进行统一管理和控制。用户通过数据库管理系统访问数据库中表内的数据。（✔MySQL就是一个数据库管理系统）
 *  DBS：数据库系统。是一个通称，包括 数据库、数据库管理系统、数据库管理人员等的统称，是最大的范畴
 *  SQL：结构化查询语言（Structured Query Language）专门用来与数据库通信的语言。
 *
 * 【MySQL】
 *  MySQL是一个开放源代码的关系型数据库管理系统
 *
 * 【RDBMS与非RDBMS的区别】关系型数据库与非关系型数据库
 *  关系型数据库以 行(row) 和 列(column) 的形式存储数据。表与表之间存在着关系
 *  关系型数据库的优势（1）复杂查询：可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。
 *                    （2）事务支持：使得对于安全性能很高的数据访问要求得以实现。
 *  非关系型数据库，是传统关系型数据库的功能阉割版本，基于键值对存储数据，不需要经过SQL层的解析，性能非常高。
 *  常见的非关系型数据库包括。键值型数据库、文档型数据库、搜索引擎和列存储等，除此以外还包括图形数据库
 *
 * 【关系型数据库的设计规则】
 *  将数据放到表中，表再放到库中。一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。
 *  E-R（entity-relationship，实体-联系）模型中有三个主要概念是： 实体集 、 属性 、 联系集。
 *    一个实体集（class）对应于数据库中的一个表（table） <===> Java中的一个类
 *    一个实体（instance）则对应于数据库表中的一行（row），也称为一条记录（record）<===>  Java类中的一个对象（或实体）
 *    一个属性（attribute）对应于数据库表中的一列（column），也称为一个字段（field）<===> Java类中的一个字段、属性(field)
 *  表与表之间的数据记录有关系(relationship)。共有四种关系：
 *    一对一关联：表A中的一条记录对应表B中的一条记录。在实际的开发中应用不多，因为一对一可以创建成一张表。
 *    一对多关联：表A中的一条记录对应表B中的多条记录
 *    多对多关联：要表示多对多关系，必须创建第三个表，该表通常称为 联接表 ，它将多对多关系划分为两个一对多关系。将这两个表的主键都插入到第三个表中。
 *    自我引用：表中的某条数据引用了当前表中的某条数据
 *

 *
 @author Alex
 @create 2023-01-12-12:45
 */
public class US01 {
}
