package mybatisplus;

/**
 * 【mybatisPlus常用注解】
 * 【@TableName】
 *  由于默认存在 表名 与 实体类类名的对应关系，可以通过该注解，设置实体类对应的表名
 *  或者通过全局配置，设置实体类对应表名时，统一加上前缀！
 *    mybatis-plus.global-config.db-config.table-prefix=mybatisplus
 *
 * 【@TableId】
 *  MyBatis-Plus在实现CRUD时，会默认将 id 属性作为主键列，并在插入数据时，默认基于雪花算法的策略生成 id
 *                                                      （如果插入数据时指定了id，则不会使用雪花算法）
 *    @TableId                 # 若主键是 uid 属性（字段），通过 @TableId 注解指定uid属性为主键列
 *    @TableId(value="uid")    # 若主键为 uid(字段)， id（属性），通过value属性，指定属性与字段的映射关系
 *    @TableId(type = IdType.ASSIGN_ID)   # 基于雪花算法的策略生成数据id
 *    @TableId(type = IdType.AUTO)        # 使用数据库的自增策略，注意，需确保数据库设置了对应字段的自增，否则无效
 *    mybatis-plus.global-config.db-config.id-type=auto   # 通过全局配置，设置当前开发环境的所有pojo，使用统一的主键生成策略✔
 *
 * 【雪花算法简介】
 *  随着业务的逐渐增长 以及 访问压力和数据量的逐渐增大。需要对数据库进行扩展。方式主要包括：业务分库、主从复制，数据库分表。
 *   以数据库分表为例。单表数据拆分有两种方式：垂直分表和水平分表。
 *  垂直分表：是将表中不常用的列拆分出去。
 *    水平分表：就是当数据量达到一定程度后，按行拆分数据。
 *  水平分表有三种常见的方式
 *（1）主键自增
 *     就按照默认自增的主键进行分表，这种方式可以随着数据的增加平滑地扩充新的表，但是很可能存在分布不均匀的问题。
 *     例如按照 1000 万来进行分表，有可能某个分段实际存储的数据量只有 1 条，而另外一个分段实际存储的数据量有 1000 万条。
 *（2）取模
 *     例如们一开始就规划了 10 个数据库表，可以简单地用 user_id % 10 的值来表示数据所属的数据库表编号，ID 为 985 的用户放到编号为 5 的子表中，ID 为 10086 的用户放到编号为 6 的子表中。
 *     这种方式表分布比较均匀。但是扩充新的表很麻烦，所有数据都要重分布。
 *（3）雪花算法
 *     根据雪花算法计算的主键值，整体上按照时间自增排序，并且整个分布式系统内不会重复，并且效率较高
 *     实现了不同表的主键的不重复性，以及相同表的主键的有序性
 *
 * 【@TableField】
 *  MyBatis-Plus在实现CRUD时，默认要求证 实体类中的属性名 与 表中的字段名一致
 *    @TableId                      # 若表中的字段使用的是下划线命名风格，而实体类中的属性使用的是驼峰命名风格。使用该注解能使用自动转换
 *    @TableId(value="username")    # 若字段为 username， 属性为name，通过value属性，指定属性与字段的映射关系
 *
 * 【@TableLogic】
 *  物理删除：真实删除，将对应数据从数据库中delete删除，之后查询不到此条被删除的数据
 *   逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为 “被删除状态” ，之后在数据库中仍旧能看到此条数据记录
 *   使用场景：逻辑删除后，可以进行数据恢复
 *  设置逻辑删除字段默认值为0，为其对应的属性上添加 @TableLogic，此时执行删除语句，并不是真正删除数据，而是会把逻辑删除字段的值为 1
 *                               UPDATE mybatisplus_user SET is_delete=1 WHERE id IN ( ? , ? , ? ) AND is_delete=0
 *  设置逻辑删除后，执行查询功能，此时被逻辑删除的数据默认不会被查询
 *                               SELECT id,name,age,email,is_delete FROM mybatisplus_user WHERE id IN ( ? , ? ) AND is_delete=0
 *
 @author Alex
 @create 2023-03-26-14:08
 */
public class UMP04 {
}
