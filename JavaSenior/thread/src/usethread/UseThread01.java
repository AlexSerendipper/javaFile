package usethread;

/**
 * 【多线程概述】
 *  单核CPU与多核CPU：单核其实是一种假的多线程，因为单核只能处理一个线程，但是CPU执行速度太快（不停切换进程），看似同时执行多线程
 *    并行：多个CPU同时执行多个任务
 *    并发：一个CPU，“同时”执行多个任务
 *  程序(program)：是为完成特定任务、用某种语言编写的一组指令的集合。即指一段静态的代码（qq.exe、powerpoint.exe）！
 *  进程(process)：是程序的一次执行过程（或是正在运行的一个程序）。✔是系统进行资源分配和调度的基本单位（即程序启动后 在内存中为其分配空间）。
 *  线程(thread)：进程可进一步细化为线程，是一个程序内部的一条执行路径。✔是程序执行的基本单位。
 *
 *    ✔✔进程共享方法区和堆空间，所以一个进程中的多个线程  共享同一堆中的对象！！共享方法区！！
 *    每个线程拥有独立的虚拟机栈和程序计数器
 *
 * 【程序的执行过程】
 * （CPU读取内存中进程的过程）：CPU中的三个组件（PC、register、ALU），PC存储指令的地址，Register读取进程中的数据，ALU进行计算处理后 将结果返回给内存。
 *
 * 【线程的调度与切换】
 * 每个进程都有各自的多个线程，这么多的线程，是通过OS（操作系统）来进行调度的。。。其中，CPU读取指令 ==> 保存现场 ==> 执行新线程 ==> 恢复现场继续执行原线程这样一个过程，称为线程的切换
 *
 * 【为何需要多线程】
 * 以单核CPU为例，只使用单个线程先后完成多个任务（调用多个方法），肯定比用多个线程来完成用的时间更短，为何仍需多线程呢？
 * (1) 提高应用程序的响应。可增强用户体验。
 * (2) 提高计算机系统CPU的利用率
 * (3) 改善程序结构。将既长又复杂的进程分为多个线程,利于理解和修改
 *
 * 【何时需要多线程】
 * (1) 程序需要同时执行两个或多个任务。
 * (2) 程序需要实现一些需要等待的任务时，如用户输入、文件读写操作等
 * (3) 需要一些后台运行的程序时
 *
 * @author Alex
 * @create 2022-11-10-10:51
 */
public class UseThread01{
}
