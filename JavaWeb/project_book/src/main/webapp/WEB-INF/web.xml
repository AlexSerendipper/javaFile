<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
 http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--上下文参数-->
    <context-param>
        <param-name>password</param-name>
        <param-value>root</param-value>
    </context-param>
    <!-- servlet标签：配置一个Servlet程序 -->
    <servlet>
        <servlet-name>RegistServlet</servlet-name>
        <servlet-class>web.RegistServlet</servlet-class>
        <init-param>
            <!--是参数名-->
            <param-name>username</param-name>
            <!--是参数值-->
            <param-value>root</param-value>
        </init-param>
    </servlet>
    <!--servlet-mapping标签：配置访问servlet程序的地址-->
    <servlet-mapping>
        <!--servlet-name标签：指定使用哪一个Servlet程序，一般上面定义哪个就用哪个-->
        <servlet-name>RegistServlet</servlet-name>
        <!--url-pattern标签：配置访问Servlet程序的web地址,访问地址为http://ip:port/工程目录/hello-->
        <url-pattern>/registServlet</url-pattern>
    </servlet-mapping>





    <servlet>
        <!--servlet-name标签：为Servlet程序起一个别名（一般是类名） -->
        <servlet-name>LoginServlet</servlet-name>
        <!--servlet-class标签：指定Servlet程序的全类名！-->
        <servlet-class>web.LoginServlet</servlet-class>
    </servlet>
    <!--servlet-mapping标签：配置访问servlet程序的地址，我们需要将它映射到webapp目录下-->
    <servlet-mapping>
        <!--servlet-name标签：指定使用哪一个Servlet程序，一般上面定义哪个就用哪个-->
        <servlet-name>LoginServlet</servlet-name>
        <!--url-pattern标签：配置访问Servlet程序在web中的路径（即浏览器输入的地址），'/'通常映射为'http://ip:port/工程名,故访问地址为http://ip:port/工程目录/hello-->
        <url-pattern>/loginServlet</url-pattern>
    </servlet-mapping>

    <servlet>
        <!--servlet-name标签：为Servlet程序起一个别名（一般是类名） -->
        <servlet-name>UserServlet</servlet-name>
        <!--servlet-class标签：指定Servlet程序的全类名！-->
        <servlet-class>web.UserServlet</servlet-class>
    </servlet>
    <!--servlet-mapping标签：配置访问servlet程序的地址，我们需要将它映射到webapp目录下-->
    <servlet-mapping>
        <!--servlet-name标签：指定使用哪一个Servlet程序，一般上面定义哪个就用哪个-->
        <servlet-name>UserServlet</servlet-name>
        <!--url-pattern标签：配置访问Servlet程序在web中的路径（即浏览器输入的地址），'/'通常映射为'http://ip:port/工程名,故访问地址为http://ip:port/工程目录/hello-->
        <url-pattern>/userServlet</url-pattern>
    </servlet-mapping>



    <servlet>
        <!--servlet-name标签：为Servlet程序起一个别名（一般是类名） -->
        <servlet-name>BookServlet</servlet-name>
        <!--servlet-class标签：指定Servlet程序的全类名！-->
        <servlet-class>web.BookServlet</servlet-class>
    </servlet>
    <!--servlet-mapping标签：配置访问servlet程序的地址，我们需要将它映射到webapp目录下-->
    <servlet-mapping>
        <!--servlet-name标签：指定使用哪一个Servlet程序，一般上面定义哪个就用哪个-->
        <servlet-name>BookServlet</servlet-name>
        <!--url-pattern标签：配置访问Servlet程序在web中的路径（即浏览器输入的地址），'/'通常映射为'http://ip:port/工程名,故访问地址为http://ip:port/工程目录/hello-->
        <url-pattern>/manager/bookServlet</url-pattern>
        <!--后台是给管理员使用，所以都需要设置权限检查才可以访问，所以统一加上/manager-->
    </servlet-mapping>




    <servlet>
        <!--servlet-name标签：为Servlet程序起一个别名（一般是类名） -->
        <servlet-name>ClientBookServlet</servlet-name>
        <!--servlet-class标签：指定Servlet程序的全类名！-->
        <servlet-class>web.ClientBookServlet</servlet-class>
    </servlet>
    <!--servlet-mapping标签：配置访问servlet程序的地址，我们需要将它映射到webapp目录下-->
    <servlet-mapping>
        <!--servlet-name标签：指定使用哪一个Servlet程序，一般上面定义哪个就用哪个-->
        <servlet-name>ClientBookServlet</servlet-name>
        <!--url-pattern标签：配置访问Servlet程序在web中的路径（即浏览器输入的地址），'/'通常映射为'http://ip:port/工程名,故访问地址为http://ip:port/工程目录/hello-->
        <url-pattern>/client/bookServlet</url-pattern>
        <!--后台是给管理员使用，所以都需要设置权限检查才可以访问，所以统一加上/manager-->
    </servlet-mapping>



    <servlet>
        <servlet-name>KaptchaServlet</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>KaptchaServlet</servlet-name>
        <url-pattern>/kaptcha.jpg</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>CartServlet</servlet-name>
        <servlet-class>web.CartServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>CartServlet</servlet-name>
        <url-pattern>/cartServlet</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>OrderServlet</servlet-name>
        <servlet-class>web.OrderServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>OrderServlet</servlet-name>
        <url-pattern>/orderServlet</url-pattern>
    </servlet-mapping>


    <!--filter 标签用于配置一个 Filter 过滤器-->
    <filter>
        <!--给 filter 起一个别名-->
        <filter-name>ManagerFilter</filter-name>
        <!--配置 filter 的全类名-->
        <filter-class>filter.ManagerFilter</filter-class>
    </filter>
    <!--filter-mapping配置Filter过滤器的拦截路径-->
    <filter-mapping>
        <!--filter-name表示当前的拦截路径给哪个filter使用,一般和别名相同-->
        <filter-name>ManagerFilter</filter-name>
        <!--url-pattern 配置filter的web路径。其中：/ 表示：http://ip:port/工程路径/  -->
        <url-pattern>/pages/manager/*</url-pattern>
        <url-pattern>/manager/bookServlet</url-pattern>
    </filter-mapping>




    <filter>
        <filter-name>TransactionFilter</filter-name>
        <filter-class>filter.TransactionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <!-- /* 表示当前工程下所有请求 -->
        <url-pattern>/*</url-pattern>
    </filter-mapping>




    <!--error-page 标签配置，服务器出错之后，自动跳转的页面-->
    <error-page>
        <!--error-code 是错误类型-->
        <error-code>500</error-code>
        <!--location 标签表示。要跳转去的页面路径-->
        <location>/pages/error/error500.jsp</location>
    </error-page>


    <!--error-page 标签配置，服务器出错之后，自动跳转的页面-->
    <error-page>
        <!--error-code 是错误类型-->
        <error-code>404</error-code>
        <!--location 标签表示。要跳转去的页面路径-->
        <location>/pages/error/error404.jsp</location>
    </error-page>
</web-app>